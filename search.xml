<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title>Hello World</title>
    <url>/posts/3eeb.html</url>
    <content><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p>
<h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p>
<h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p>
<h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p>
<h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure>

<p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>
]]></content>
  </entry>
  <entry>
    <title>EduCF126</title>
    <url>/posts/927e.html</url>
    <content><![CDATA[<h1 id="Educational-Codeforces-Round-126-Rated-for-Div-2"><a href="#Educational-Codeforces-Round-126-Rated-for-Div-2" class="headerlink" title="Educational Codeforces Round 126 (Rated for Div. 2)"></a><a href="https://codeforces.com/contest/1661">Educational Codeforces Round 126 (Rated for Div. 2)</a></h1><h2 id="A-Array-Balancing"><a href="#A-Array-Balancing" class="headerlink" title="A. Array Balancing"></a>A. Array Balancing</h2><p><strong>题意</strong>：给出a和b两个数组，可以对相同位置上的a和b进行交换，求a和b数组中所有相邻两个数的绝对值之和的最小值。</p>
<p><strong>思路</strong>：使较小的在一边，较大的在一边。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">30</span>;</span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> n;</span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">		<span class="built_in">memset</span>(b,<span class="number">0</span>,<span class="keyword">sizeof</span> b);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )	cin&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )	cin&gt;&gt;b[i];</span><br><span class="line">		ll sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )	<span class="keyword">if</span>(a[i] &gt; b[i])	<span class="built_in">swap</span>(a[i],b[i]);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i ++ )	</span><br><span class="line">		&#123;</span><br><span class="line">			sum += <span class="built_in">abs</span>(a[i]-a[i+<span class="number">1</span>]);</span><br><span class="line">			sum += <span class="built_in">abs</span>(b[i]-b[i+<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;sum&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="B-Getting-Zero"><a href="#B-Getting-Zero" class="headerlink" title="B. Getting Zero"></a>B. Getting Zero</h2><p><strong>题意</strong>：对一个数进行两种操作</p>
<p>1，v &#x3D; (v+1) mod 32768</p>
<p>2，v &#x3D; (v*2) mod 32768</p>
<p>求出最少操作数使v为0。</p>
<p><strong>思路</strong>：显然最差的操作是连乘15次，这时v就是32768的倍数，取模为0.</p>
<p>这时就需要穿插+1操作来优化答案，直接暴力枚举+1的操作数和*2的操作数即可。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span> , mod = <span class="number">32768</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">1e9</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">15</span> ; i ++ )</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">15</span> ; j ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>((x+i)*(<span class="number">1</span>&lt;&lt;j)%mod == <span class="number">0</span>)</span><br><span class="line">				ans = <span class="built_in">min</span>(ans,i+j);</span><br><span class="line">		&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="type">int</span> n;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )	cin&gt;&gt;a[i];</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> res = <span class="built_in">solve</span>(a[i]);	</span><br><span class="line">		cout&lt;&lt;res&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="C-Water-the-Trees"><a href="#C-Water-the-Trees" class="headerlink" title="C. Water the Trees"></a>C. Water the Trees</h2><p><strong>题意</strong>：给出一些数的高度，现在可以通过浇水来增加树的高度，每天可以浇一棵树，天数为奇数天浇水使树高增加1，偶数天浇水使树高增加2，问多少天后所有的树高相同，求最少天数。</p>
<p><strong>思路</strong>：分类讨论，最终答案一定是所有的树都到达最高树的高度。所以对于每颗树和最高树的差值，为奇数则需要一个奇数天，为偶数则无所谓。</p>
<p>求出所有差值的和，在需要cnt的奇数天至少有 2*cnt - 1 天和sum&#x2F;3 * 2中取一个最大值。</p>
<p>同时还要求一个最高树高度+1的情况，因为这种情况可能使奇数天减少使答案变小，结果两种中取min。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">3e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="type">int</span> mx)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ll sum = <span class="number">0</span> , cnt = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> d = mx - a[i];</span><br><span class="line">		<span class="keyword">if</span>(d%<span class="number">2</span> == <span class="number">1</span>)	cnt ++;</span><br><span class="line">		sum += d;</span><br><span class="line">	&#125;</span><br><span class="line">	ll ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(sum % <span class="number">3</span> == <span class="number">0</span>) ans = <span class="built_in">max</span>((ll)cnt*<span class="number">2</span><span class="number">-1</span>,sum/<span class="number">3</span>*<span class="number">2</span>);</span><br><span class="line">	<span class="keyword">else</span> <span class="keyword">if</span>(sum % <span class="number">3</span> == <span class="number">1</span>)	ans = <span class="built_in">max</span>((ll)cnt*<span class="number">2</span><span class="number">-1</span>,sum/<span class="number">3</span>*<span class="number">2</span>+<span class="number">1</span>);</span><br><span class="line">	<span class="keyword">else</span> ans = <span class="built_in">max</span>((ll)cnt*<span class="number">2</span><span class="number">-1</span>,sum/<span class="number">3</span>*<span class="number">2</span>+<span class="number">2</span>);</span><br><span class="line">    <span class="comment">//剩一个偶数天需要额外两天</span></span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )	cin&gt;&gt;a[i];</span><br><span class="line">		<span class="built_in">sort</span>(a,a+n);</span><br><span class="line">		<span class="keyword">if</span>(a[<span class="number">0</span>] == a[n<span class="number">-1</span>])	cout&lt;&lt;<span class="string">&quot;0\n&quot;</span>;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			ll ans = <span class="number">0</span>;</span><br><span class="line">			ans = <span class="built_in">min</span>(<span class="built_in">solve</span>(a[n<span class="number">-1</span>]),<span class="built_in">solve</span>(a[n<span class="number">-1</span>]+<span class="number">1</span>));</span><br><span class="line">			cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125; </span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>CF#779</title>
    <url>/posts/54eb.html</url>
    <content><![CDATA[<h1 id="Codeforces-Round-779-Div-2"><a href="#Codeforces-Round-779-Div-2" class="headerlink" title="Codeforces Round #779 (Div. 2)"></a><a href="https://codeforces.com/contest/1658">Codeforces Round #779 (Div. 2)</a></h1><h2 id="D1-388535-Easy-Version"><a href="#D1-388535-Easy-Version" class="headerlink" title="D1. 388535 (Easy Version)"></a>D1. 388535 (Easy Version)</h2><p><strong>题意</strong>：对一个由l,r的一个全排列数组，对于数组中的每一个数异或上x。</p>
<p>给出异或之后的数组，要求求出x。</p>
<p><strong>思路</strong>：</p>
<p>首先来看一下0~7的二进制数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="number">000</span>  <span class="number">0</span>   我们对于每一位进行查看(垂直): 对于第<span class="number">0</span>位:  对于第<span class="number">1</span>位 </span><br><span class="line"><span class="number">001</span>  <span class="number">1</span>                                  <span class="number">1</span>       <span class="number">0</span></span><br><span class="line"><span class="number">010</span>  <span class="number">2</span>                                  <span class="number">0</span>       <span class="number">0</span>    </span><br><span class="line"><span class="number">011</span>  <span class="number">3</span>                                  <span class="number">1</span>       <span class="number">1</span></span><br><span class="line"><span class="number">100</span>  <span class="number">4</span>                                  <span class="number">0</span>       <span class="number">1</span></span><br><span class="line"><span class="number">101</span>  <span class="number">5</span>                                  <span class="number">1</span>       <span class="number">0</span></span><br><span class="line"><span class="number">110</span>  <span class="number">6</span>                                  <span class="number">0</span>       <span class="number">1</span>    </span><br><span class="line"><span class="number">111</span>  <span class="number">7</span>                                  <span class="number">1</span>       <span class="number">1</span></span><br></pre></td></tr></table></figure>

<p>可以发现一个性质对于每一位的任一前缀0的个数必然不少于1的个数，那么同样只有满足这个性质的数组排序后才为连续的数。</p>
<p>所以对于给定的数组，只需统计每一位0和1的个数，只有0的个数不少于1的个数，对于0少于1的情况，显然要做出改变，也就是0变1，1变0就行，这一位异或上1，即为总体异或上x.</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> a[<span class="number">35</span>][<span class="number">2</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		ll l,r;</span><br><span class="line">		cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">		<span class="built_in">memset</span>(a,<span class="number">0</span>,<span class="keyword">sizeof</span> a);</span><br><span class="line">		<span class="keyword">for</span>(ll i = l ; i &lt;= r ; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			ll x;</span><br><span class="line">			cin&gt;&gt;x;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt; <span class="number">32</span> ; j ++ )</span><br><span class="line">				a[j][x &gt;&gt; j &amp; <span class="number">1</span>] ++;</span><br><span class="line">		&#125;</span><br><span class="line">		ll ans = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">32</span> ; i ++ )</span><br><span class="line">			<span class="keyword">if</span>(a[i][<span class="number">1</span>] &gt; a[i][<span class="number">0</span>])	ans += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>codeforces</category>
      </categories>
      <tags>
        <tag>二进制</tag>
        <tag>思维</tag>
      </tags>
  </entry>
  <entry>
    <title>CF#768</title>
    <url>/posts/42b.html</url>
    <content><![CDATA[<h1 id="Codeforces-Round-768-Div-2"><a href="#Codeforces-Round-768-Div-2" class="headerlink" title="Codeforces Round #768 (Div. 2)"></a><a href="https://codeforces.com/contest/1631">Codeforces Round #768 (Div. 2)</a></h1><h2 id="C-And-Matching"><a href="#C-And-Matching" class="headerlink" title="C. And Matching"></a>C. And Matching</h2><p><strong>题意</strong>：给出一个n和k，要求对由0，1，2，… ，n-1组成的数组，分成n&#x2F;2对，使每一对两个数的相与的和为k，n为2的次幂，要求给出一种划分方案。</p>
<p><img src="https://cdn.acwing.com/media/article/image/2022/04/29/57661_0755d703c7-QQ%E6%88%AA%E5%9B%BE20220429113135.png" alt="QQ截图20220429113135.png"> </p>
<p><strong>思路</strong>：</p>
<p>对于a&amp;b &#x3D; 0，我们可以定义f(a) &#x3D; b,至于如何构造，我们发现a&#x3D;101，b&#x3D;010，a^b &#x3D; 111，那么可以由a^(n-1)得到b，因为n是2的次幂，所以n-1就是范围内最长的，</p>
<p>由此我们可以构造出k&#x3D;0的情况，即0&amp;(n-1),1&amp;(n-2),2&amp;(n-3)….,</p>
<p>交换其中的一些数对，可以得到别的k值，例如对于0&lt;k&lt;n-1的所有情况都可以用k&amp;(n-1),0&amp;(f(k)),其他仍为0，比较特殊的有k&#x3D;n-1的情况，因为n-1是最大的数了，不能直接&amp;得到，所以可由1+n-2的情况得到，而对于n&#x3D;4，k&#x3D;3则无法得到。</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">7e4</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps=<span class="number">1e-8</span>;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">f</span><span class="params">(<span class="type">int</span> a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a^(n<span class="number">-1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="built_in">memset</span>(st,<span class="number">0</span>,<span class="keyword">sizeof</span> st);</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">		<span class="keyword">if</span>(k == <span class="number">0</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )</span><br><span class="line">				<span class="keyword">if</span>(!st[i])</span><br><span class="line">				&#123;</span><br><span class="line">					cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="built_in">f</span>(i)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">					st[i] = st[<span class="built_in">f</span>(i)] = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(k == n<span class="number">-1</span> &amp;&amp; n == <span class="number">4</span>)	cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(k == n<span class="number">-1</span> &amp;&amp; n != <span class="number">4</span>)</span><br><span class="line">		&#123;</span><br><span class="line">			cout&lt;&lt;n<span class="number">-2</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="number">2</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			cout&lt;&lt;<span class="number">1</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n<span class="number">-3</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			st[<span class="number">0</span>] = st[<span class="number">1</span>] = st[<span class="number">2</span>] = st[n<span class="number">-1</span>] = st[n<span class="number">-2</span>] = st[n<span class="number">-3</span>] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt; n ; i ++ )</span><br><span class="line">				<span class="keyword">if</span>(!st[i])</span><br><span class="line">				&#123;</span><br><span class="line">					cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="built_in">f</span>(i)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">					st[i] = st[<span class="built_in">f</span>(i)] = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			cout&lt;&lt;k&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;n<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			cout&lt;&lt;<span class="number">0</span>&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="built_in">f</span>(k)&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">			st[<span class="number">0</span>] = st[k] = st[n<span class="number">-1</span>] = st[<span class="built_in">f</span>(k)] = <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt; n ; i ++ )</span><br><span class="line">				<span class="keyword">if</span>(!st[i])</span><br><span class="line">				&#123;</span><br><span class="line">					cout&lt;&lt;i&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;<span class="built_in">f</span>(i)&lt;&lt;<span class="string">&#x27;\n&#x27;</span>;</span><br><span class="line">					st[i] = st[<span class="built_in">f</span>(i)] = <span class="number">1</span>;</span><br><span class="line">				&#125;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>int128使用</title>
    <url>/posts/76f6.html</url>
    <content><![CDATA[<p><strong>int128最多支持38的输入和输出</strong></p>
<p>读入输出模板</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> __int128 <span class="title">read</span><span class="params">()</span></span>&#123;</span><br><span class="line">    __int128 x=<span class="number">0</span>,f=<span class="number">1</span>;</span><br><span class="line">    <span class="type">char</span> ch=<span class="built_in">getchar</span>();</span><br><span class="line">    <span class="keyword">while</span>(ch&lt;<span class="string">&#x27;0&#x27;</span>||ch&gt;<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">if</span>(ch==<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">            f=<span class="number">-1</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(ch&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;ch&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;</span><br><span class="line">        x=x*<span class="number">10</span>+ch-<span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">        ch=<span class="built_in">getchar</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> x*f;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">void</span> <span class="title">print</span><span class="params">(__int128 x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);</span><br><span class="line">        x=-x;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)</span><br><span class="line">        <span class="built_in">print</span>(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span>&#123;</span><br><span class="line">    __int128 a = <span class="built_in">read</span>();</span><br><span class="line">    __int128 b = <span class="built_in">read</span>();</span><br><span class="line">    <span class="built_in">print</span>(a + b);</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
      <tags>
        <tag>大整数计算</tag>
      </tags>
  </entry>
  <entry>
    <title>atcoder-abc250</title>
    <url>/posts/346c.html</url>
    <content><![CDATA[<h1 id="AtCoder-Beginner-Contest-250-A-E"><a href="#AtCoder-Beginner-Contest-250-A-E" class="headerlink" title="AtCoder Beginner Contest 250 A~E"></a>AtCoder Beginner Contest 250 A~E</h1><h2 id="A-Adjacent-Squares"><a href="#A-Adjacent-Squares" class="headerlink" title="A - Adjacent Squares"></a>A - Adjacent Squares</h2><p><strong>题意</strong>：给出一个行列为H，W的矩阵，再给一个坐标，问周围有多少个正方形。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C - Adjacent Swaps</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - AtCoder Beginner Contest 250</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc250/tasks/abc250_c</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; <span class="built_in">assert</span>(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n,m;</span><br><span class="line">	<span class="type">int</span> a,b;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;m&gt;&gt;a&gt;&gt;b;</span><br><span class="line">	<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">if</span>(a &gt; <span class="number">1</span>)	ans ++;</span><br><span class="line">	<span class="keyword">if</span>(b &gt; <span class="number">1</span>)	ans ++;</span><br><span class="line">	<span class="keyword">if</span>(a &lt; n)	ans ++;</span><br><span class="line">	<span class="keyword">if</span>(b &lt; m)	ans ++;</span><br><span class="line">	cout&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B-Enlarged-Checker-Board"><a href="#B-Enlarged-Checker-Board" class="headerlink" title="B - Enlarged Checker Board"></a>B - Enlarged Checker Board</h2><p><strong>题意</strong>：给出n*n的正方形矩阵，对地板染色，有黑白两种色 ，要求相邻两个的地板颜色不同，(1,1)为白色，给出每块地板的大小。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: B - Enlarged Checker Board</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - AtCoder Beginner Contest 250</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc250/tasks/abc250_b</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">110</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; <span class="built_in">assert</span>(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"><span class="type">int</span> st[<span class="number">15</span>][<span class="number">15</span>];</span><br><span class="line"><span class="type">int</span> n,a,b;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">solve</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> y,<span class="type">int</span> q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(q == <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = x*a - a + <span class="number">1</span>; i &lt;= x*a; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = y*b - b + <span class="number">1</span>; j &lt;= y*b ; j ++ )</span><br><span class="line">				g[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span> </span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = x*a - a + <span class="number">1</span>; i &lt;= x*a; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = y*b - b + <span class="number">1</span>; j &lt;= y*b ; j ++ )</span><br><span class="line">				g[i][j] = <span class="string">&#x27;#&#x27;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;a&gt;&gt;b;</span><br><span class="line">	st[<span class="number">1</span>][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n ; j ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(i == <span class="number">1</span> &amp;&amp; j == <span class="number">1</span>)	<span class="keyword">continue</span>;</span><br><span class="line">			<span class="keyword">if</span>(i % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; j == <span class="number">1</span>)	st[i][j] = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">else</span> <span class="keyword">if</span>(!st[i][j<span class="number">-1</span>])	st[i][j] = <span class="number">1</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n ; j ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="built_in">solve</span>(i,j,st[i][j]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n*a ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= n*b ; j ++ )</span><br><span class="line">			cout&lt;&lt;g[i][j];</span><br><span class="line">		cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C-Adjacent-Swaps"><a href="#C-Adjacent-Swaps" class="headerlink" title="C - Adjacent Swaps"></a>C - Adjacent Swaps</h2><p><strong>题意</strong>：n个球排成一排，标号从1到n，现进行q次操作，每次操作将标号为x的球与其右边的球交换位置，如果右边没球则与左边的交换位置。输出最终的排列。<br><strong>思路</strong>：一个数组记录当前位置的球的编号，一个map记录编号为x的球的位置，模拟即可。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C - Adjacent Swaps</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - AtCoder Beginner Contest 250</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc250/tasks/abc250_c</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; <span class="built_in">assert</span>(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n,q;</span><br><span class="line">	cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )	a[i] = i , mp[i] = i;</span><br><span class="line">	<span class="keyword">while</span>(q--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> x;</span><br><span class="line">		cin&gt;&gt;x;</span><br><span class="line">		<span class="keyword">if</span>(mp[x] == n)</span><br><span class="line">		&#123;</span><br><span class="line">			mp[a[n<span class="number">-1</span>]] = n;</span><br><span class="line">			mp[x] = n<span class="number">-1</span>;</span><br><span class="line">			<span class="built_in">swap</span>(a[n],a[n<span class="number">-1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">else</span></span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> idx = mp[x];</span><br><span class="line">			mp[a[idx]] = idx + <span class="number">1</span>;</span><br><span class="line">			mp[a[idx+<span class="number">1</span>]] = idx;</span><br><span class="line">			<span class="built_in">swap</span>(a[idx],a[idx+<span class="number">1</span>]);</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )	cout&lt;&lt;a[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="D-250-like-Number"><a href="#D-250-like-Number" class="headerlink" title="D - 250-like Number"></a>D - 250-like Number</h2><p><strong>题意</strong>：如果一个数可以被表示为$p*q^3$,p，q均为素数，我们就说它相似250，问正整数n的范围内有多少个这样的数。<br><strong>思路</strong>：n的范围是1e18，因为有了三次方，所以要求的p，q均小于1e6，所以筛出来1e6以内的素数，对于每一个p找它在n范围内的q，而且乘出来的数都是不同的。这个过程可以通过双指针或者二分实现，使用二分时会爆long long，可以使用__int128.</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: D - 250-like Number</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - AtCoder Beginner Contest 250</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc250/tasks/abc250_d</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; <span class="built_in">assert</span>(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line">__int128 prm[N];</span><br><span class="line"><span class="type">bool</span> prime[N];</span><br><span class="line"><span class="type">int</span> cnt;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">is_prime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=<span class="number">2</span>;i&lt;=(<span class="type">int</span>)<span class="number">1e6</span>;i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(!prime[i])   prm[cnt++]=i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>;prm[j]&lt;=(<span class="type">int</span>)<span class="number">1e6</span>/i;j++)</span><br><span class="line">        &#123;</span><br><span class="line">            prime[prm[j]*i]=<span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span>(i%prm[j]==<span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	ll n;</span><br><span class="line">	<span class="built_in">is_prime</span>();</span><br><span class="line">	ll ans = <span class="number">0</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; cnt - <span class="number">1</span>; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> l = i + <span class="number">1</span> , r = cnt - <span class="number">1</span>;</span><br><span class="line">		<span class="type">int</span> idx = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">while</span>(l &lt;= r)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">			<span class="keyword">if</span>(prm[i]*prm[mid]*prm[mid]*prm[mid] &lt;= n)</span><br><span class="line">			&#123;</span><br><span class="line">				idx = mid;</span><br><span class="line">				l = mid+<span class="number">1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span></span><br><span class="line">			&#123;</span><br><span class="line">				r = mid<span class="number">-1</span>;</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(idx) ans += (idx-i);</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// int l = 0 , r = cnt-1;</span></span><br><span class="line">	<span class="comment">// while(l &lt; r)</span></span><br><span class="line">	<span class="comment">// &#123;</span></span><br><span class="line">		<span class="comment">// if(prm[l]*prm[r]*prm[r]*prm[r] &lt;= n)</span></span><br><span class="line">		<span class="comment">// &#123;</span></span><br><span class="line">			<span class="comment">// ans += (r - l);</span></span><br><span class="line">			<span class="comment">// l ++;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">		<span class="comment">// else </span></span><br><span class="line">		<span class="comment">// &#123;</span></span><br><span class="line">			<span class="comment">// r --;</span></span><br><span class="line">		<span class="comment">// &#125;</span></span><br><span class="line">	<span class="comment">// &#125;</span></span><br><span class="line">	cout&lt;&lt;ans;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="E-Prefix-Equality"><a href="#E-Prefix-Equality" class="headerlink" title="E - Prefix Equality"></a>E - Prefix Equality</h2><p><strong>题意</strong>：给出长度均为n的数组A和B，进行q次询问，每次询问给出x和y两个值，代表A数组前x个元素的值的集合，B数组前y个元素的值的集合，假如两个集合相等，输出yes，否则输出no。<br><strong>思路</strong>：对于每次询问，是否满足条件，关键看A中的前x个元素在B中出现的最晚位置是否小于y，B中的前y个元素在A中出现的最晚位置是否小于x。所以可以用两个map记录数组中的元素最早出现位置，然后再处理每个位置b中的元素在a中出现的位置，没有出现记录为无穷，同样处理a。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: E - Prefix Equality</span></span><br><span class="line"><span class="comment">// Contest: AtCoder - AtCoder Beginner Contest 250</span></span><br><span class="line"><span class="comment">// URL: https://atcoder.jp/contests/abc250/tasks/abc250_e</span></span><br><span class="line"><span class="comment">// Memory Limit: 1024 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 4000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">2e5</span> + <span class="number">10</span> , inf = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="function">ll <span class="title">powmod</span><span class="params">(ll a,ll b)</span> </span>&#123;ll res=<span class="number">1</span>;a%=mod; <span class="built_in">assert</span>(b&gt;=<span class="number">0</span>); <span class="keyword">for</span>(;b;b&gt;&gt;=<span class="number">1</span>)&#123;<span class="keyword">if</span>(b&amp;<span class="number">1</span>)res=res*a%mod;a=a*a%mod;&#125;<span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">int</span> a[N],b[N];</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mpa,mpb;</span><br><span class="line"><span class="type">int</span> prea[N],preb[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> n,q;</span><br><span class="line">	cin&gt;&gt;n;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;a[i];</span><br><span class="line">		<span class="keyword">if</span>(!mpa[a[i]])	mpa[a[i]] = i;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;b[i];</span><br><span class="line">		<span class="keyword">if</span>(!mpb[b[i]])	mpb[b[i]] = i;</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		prea[i] = <span class="built_in">max</span>(prea[i<span class="number">-1</span>],mpa[b[i]] ? mpa[b[i]] : inf);</span><br><span class="line"> 		preb[i] = <span class="built_in">max</span>(preb[i<span class="number">-1</span>],mpb[a[i]] ? mpb[a[i]] : inf);</span><br><span class="line"> 		</span><br><span class="line"> 	&#125;</span><br><span class="line"> 	cin&gt;&gt;q;</span><br><span class="line"> 	<span class="keyword">while</span>(q--)</span><br><span class="line"> 	&#123;</span><br><span class="line"> 		<span class="type">int</span> x,y;</span><br><span class="line"> 		cin&gt;&gt;x&gt;&gt;y;</span><br><span class="line"> 		<span class="keyword">if</span>(preb[x] &lt;= y &amp;&amp; prea[y] &lt;= x)	cout&lt;&lt;<span class="string">&quot;Yes\n&quot;</span>;</span><br><span class="line"> 		<span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;No\n&quot;</span>;</span><br><span class="line"> 	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>atcoder</category>
      </categories>
  </entry>
  <entry>
    <title>CF#790</title>
    <url>/posts/322f.html</url>
    <content><![CDATA[<h1 id="Codeforces-Round-790-Div-4"><a href="#Codeforces-Round-790-Div-4" class="headerlink" title="Codeforces Round #790 (Div. 4)"></a>Codeforces Round #790 (Div. 4)</h1><h2 id="A-Lucky"><a href="#A-Lucky" class="headerlink" title="A. Lucky?"></a>A. Lucky?</h2><p><strong>题意</strong>：给一个字符串，看前三位之和是否和后三位相等。<br><strong>代码</strong>：</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: A. Lucky?</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/A</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		string s;</span><br><span class="line">		cin&gt;&gt;s;</span><br><span class="line">		<span class="type">int</span> a = <span class="number">0</span> , b = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; <span class="number">3</span> ; i ++ )	a += s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">3</span> ; i &lt; <span class="number">6</span> ; i ++ )	b += s[i] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">		<span class="keyword">if</span>(a == b)	cout&lt;&lt;<span class="string">&quot;YES\n&quot;</span>;</span><br><span class="line">		<span class="keyword">else</span> cout&lt;&lt;<span class="string">&quot;NO\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="B-Equal-Candies"><a href="#B-Equal-Candies" class="headerlink" title="B. Equal Candies"></a>B. Equal Candies</h2><p><strong>题意</strong>：有n个糖果，每个糖果重量不同，要使大家分得糖果重量相同，每人分一个，你可以减少每个糖果任意重量，问最少减少多少。<br><strong>思路</strong>：直接所有糖果都减少至最小值。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: B. Equal Candies</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/B</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">int</span> a[<span class="number">55</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> n;</span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )	cin&gt;&gt;a[i];</span><br><span class="line">		<span class="built_in">sort</span>(a,a+n);</span><br><span class="line">		ll ans = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i ++ )	ans += (a[i]-a[<span class="number">0</span>]);</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="C-Most-Similar-Words"><a href="#C-Most-Similar-Words" class="headerlink" title="C. Most Similar Words"></a>C. Most Similar Words</h2><p><strong>题意</strong>：每组给n个字符串，任意选两个，使其中一个转化为另一个，求最小转化步数，每个字母可以转化为相邻的字母，花费1.<br><img src="https://cdn.acwing.com/media/article/image/2022/06/07/57661_cab1ed2ce6-7b648ef10ddd4c3f922a6040fdc61624.png" alt="7b648ef10ddd4c3f922a6040fdc61624.png"><br><strong>思路</strong>：排序后选最小和次小，最大和次大，两者中取最小值。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: C. Most Similar Words</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/C</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">55</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line">string s[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> n,m;</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )	cin&gt;&gt;s[i];</span><br><span class="line">		<span class="type">int</span> ans = <span class="number">2e9</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = i+<span class="number">1</span> ; j &lt; n ; j ++ )</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">				<span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span> ; k &lt; m ; k ++ )</span><br><span class="line">					x += <span class="built_in">abs</span>((s[i][k]-<span class="string">&#x27;a&#x27;</span>) - (s[j][k]-<span class="string">&#x27;a&#x27;</span>));</span><br><span class="line">				ans = <span class="built_in">min</span>(ans,x);</span><br><span class="line">			&#125;</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="D-X-Sum"><a href="#D-X-Sum" class="headerlink" title="D. X-Sum"></a>D. X-Sum</h2><p><strong>题意</strong>：给一个棋盘，放置一个皇后，可以吃到对角线上的分数，求放哪个位置，分数最大。<br><img src="https://cdn.acwing.com/media/article/image/2022/06/07/57661_ea6f9a6ae6-74eb1ffdc07b41da84d46323919dfac7.png" alt="74eb1ffdc07b41da84d46323919dfac7.png"> </p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: D. X-Sum</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/D</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 2000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">int</span> a[<span class="number">210</span>][<span class="number">210</span>];</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="function">ll <span class="title">solve</span><span class="params">(<span class="type">int</span> i,<span class="type">int</span> j)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	ll ans = a[i][j];</span><br><span class="line">	<span class="type">int</span> x = i - <span class="number">1</span> , y = j - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(x &gt;= <span class="number">1</span> &amp;&amp; y &gt;= <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		ans += a[x][y];</span><br><span class="line">		x--,y--;</span><br><span class="line">	&#125;</span><br><span class="line">	x = i - <span class="number">1</span> , y = j + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(x &gt;= <span class="number">1</span> &amp;&amp; y &lt;= m)</span><br><span class="line">	&#123;</span><br><span class="line">		ans += a[x][y];</span><br><span class="line">		x -- , y ++;</span><br><span class="line">	&#125;</span><br><span class="line">	x = i + <span class="number">1</span> , y = j - <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(x &lt;= n &amp;&amp; y &gt;= <span class="number">1</span>)</span><br><span class="line">	&#123;</span><br><span class="line">		ans += a[x][y];</span><br><span class="line">		x ++ , y --;</span><br><span class="line">	&#125;</span><br><span class="line">	x = i + <span class="number">1</span> , y = j + <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">while</span>(x &lt;= n &amp;&amp; y &lt;= m)</span><br><span class="line">	&#123;</span><br><span class="line">		ans += a[x][y];</span><br><span class="line">		x ++, y ++;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= m ; j ++ )</span><br><span class="line">				cin&gt;&gt;a[i][j];</span><br><span class="line">		ll ans = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">			<span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= m ; j ++ )</span><br><span class="line">				ans = <span class="built_in">max</span>(ans,<span class="built_in">solve</span>(i,j));</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="E-Eating-Queries"><a href="#E-Eating-Queries" class="headerlink" title="E. Eating Queries"></a>E. Eating Queries</h2><p><strong>题意</strong>：有n个糖果，给出每个重量，q次询问，每次询问要吃x重量的糖果，问最少吃的糖果数，每次询问中吃的糖果独立，同一个糖果一次询问中只能吃一次。<br><strong>思路</strong>：显然从大开始吃，算一下前缀和，用二分来求每次的糖果数。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: E. Eating Queries</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/E</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 3500 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">int</span> a[N],s[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> <span class="built_in">lower_bound</span>(s,s+n,x) - s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">return</span> a &gt; b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> q;</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;q;</span><br><span class="line">		ll sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			cin&gt;&gt;a[i],sum+=a[i];</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="built_in">sort</span>(a,a+n,cmp);</span><br><span class="line">		s[<span class="number">0</span>] = a[<span class="number">0</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; n ; i ++ )	s[i] = s[i<span class="number">-1</span>] + a[i];</span><br><span class="line">		<span class="keyword">while</span>(q--)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> x;</span><br><span class="line">			cin&gt;&gt;x;</span><br><span class="line">			<span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">			<span class="keyword">if</span>(x &gt; sum)</span><br><span class="line">			&#123;</span><br><span class="line">				cout&lt;&lt;<span class="number">-1</span>&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">				<span class="keyword">continue</span>;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="type">int</span> idx = <span class="built_in">find</span>(x);</span><br><span class="line">			ans = idx + <span class="number">1</span>;</span><br><span class="line">			cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="F-Longest-Strike"><a href="#F-Longest-Strike" class="headerlink" title="F. Longest Strike"></a>F. Longest Strike</h2><p><strong>题意</strong>：给一个长度为n的数组，以及k，要求求一个最大区间，区间中的元素连续，且在数组中最少出现k次，<br><img src="https://cdn.acwing.com/media/article/image/2022/06/07/57661_ffecf78fe6-16563cc16a7f430e8ce887d891f99ae4.png" alt="16563cc16a7f430e8ce887d891f99ae4.png"><br><strong>思路</strong>用map标记，map将first自动排序，将其存入数组，用双指针，移动一边。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: F. Longest Strike</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/F</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line">map&lt;<span class="type">int</span>,<span class="type">int</span>&gt; mp;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		mp.<span class="built_in">clear</span>();</span><br><span class="line">		<span class="type">int</span> n,k;</span><br><span class="line">		cin&gt;&gt;n&gt;&gt;k;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )	cin&gt;&gt;a[i],mp[a[i]] ++;</span><br><span class="line">		<span class="type">int</span> l,r;</span><br><span class="line">		vector&lt;<span class="type">int</span>&gt; ve;</span><br><span class="line">		<span class="keyword">for</span>(<span class="keyword">auto</span> v:mp)</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(v.second &gt;= k)	ve.<span class="built_in">push_back</span>(v.fi);</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">if</span>(ve.<span class="built_in">size</span>() == <span class="number">0</span>)	</span><br><span class="line">		&#123;</span><br><span class="line">			cout&lt;&lt;<span class="string">&quot;-1\n&quot;</span>;</span><br><span class="line">			<span class="keyword">continue</span>;</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">		l = r = ve[<span class="number">0</span>];</span><br><span class="line">		<span class="type">int</span> idx = ve[<span class="number">0</span>];</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt; ve.<span class="built_in">size</span>() ; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(ve[i] - <span class="number">1</span> == ve[i<span class="number">-1</span>])</span><br><span class="line">			&#123;</span><br><span class="line">				<span class="keyword">if</span>(ve[i] - idx &gt; len)</span><br><span class="line">				&#123;</span><br><span class="line">					len = ve[i] - idx;</span><br><span class="line">					r = ve[i];</span><br><span class="line">					l = idx;</span><br><span class="line">				&#125;</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="keyword">else</span> </span><br><span class="line">			&#123;</span><br><span class="line">				idx = ve[i];</span><br><span class="line">			&#125;</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;l&lt;&lt;<span class="string">&quot; &quot;</span>&lt;&lt;r&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="G-White-Black-Balanced-Subtrees"><a href="#G-White-Black-Balanced-Subtrees" class="headerlink" title="G. White-Black Balanced Subtrees"></a>G. White-Black Balanced Subtrees</h2><p><strong>题意</strong>：建一棵树，每个点有黑白染色，求这颗树中为平衡树的子树数量，当一颗子树中黑白节点数相同时，为平衡树。<br><strong>思路</strong>：树形dp，<br>状态表示：<code>f[u][0]以u为根节点的树中白色节点数</code><br>                <code>f[u][1]以u为根节点的树中黑色节点数</code></p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: G. White-Black Balanced Subtrees</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/G</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="type">int</span> f[N][<span class="number">3</span>];</span><br><span class="line"><span class="type">int</span> e[N],ne[N],h[N],idx;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a,<span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	e[idx] = b , ne[idx] = h[a] , h[a] = idx ++;</span><br><span class="line">&#125; </span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">string s;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> fa)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(s[u] == <span class="string">&#x27;W&#x27;</span>)	f[u][<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">else</span> f[u][<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">	<span class="keyword">for</span>(<span class="type">int</span> i = h[u] ; ~i ; i = ne[i])</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> j = e[i];</span><br><span class="line">		<span class="keyword">if</span>(j == fa) <span class="keyword">continue</span>;</span><br><span class="line">		<span class="built_in">dfs</span>(j,u);</span><br><span class="line">		f[u][<span class="number">0</span>] += f[j][<span class="number">0</span>] , f[u][<span class="number">1</span>] += f[j][<span class="number">1</span>];</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="built_in">memset</span>(h,<span class="number">-1</span>,<span class="keyword">sizeof</span> h);</span><br><span class="line">		<span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span> f);</span><br><span class="line">		idx = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= n ; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="type">int</span> a;</span><br><span class="line">			cin&gt;&gt;a;</span><br><span class="line">			<span class="built_in">add</span>(a,i);</span><br><span class="line">			<span class="built_in">add</span>(i,a);</span><br><span class="line">		&#125;</span><br><span class="line">		cin&gt;&gt;s;</span><br><span class="line">		s = <span class="string">&quot; &quot;</span> + s;</span><br><span class="line">		<span class="built_in">dfs</span>(<span class="number">1</span>,<span class="number">-1</span>);</span><br><span class="line">		ll ans = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			<span class="keyword">if</span>(f[i][<span class="number">0</span>] == f[i][<span class="number">1</span>])	ans ++;</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="H-Maximum-Crossings"><a href="#H-Maximum-Crossings" class="headerlink" title="H. Maximum Crossings"></a>H. Maximum Crossings</h2><p><strong>题意</strong>：不想说了，就是求逆序对。<br><strong>思路</strong>：归并排序，树状数组，线段树都可以求解，好久没写线段树了，这里贴个线段树写法。</p>
<figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Problem: H2. Maximum Crossings (Hard Version)</span></span><br><span class="line"><span class="comment">// Contest: Codeforces - Codeforces Round #790 (Div. 4)</span></span><br><span class="line"><span class="comment">// URL: https://codeforces.com/contest/1676/problem/H2</span></span><br><span class="line"><span class="comment">// Memory Limit: 256 MB</span></span><br><span class="line"><span class="comment">// Time Limit: 1000 ms</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="meta">#<span class="keyword">define</span> ios ios::sync_with_stdio(false),cin.tie(0),cout.tie(0);</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> fi first</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> se second</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ull;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="keyword">typedef</span> vector&lt;<span class="type">int</span>&gt; VI;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod=<span class="number">1000000007</span> , N = <span class="number">2e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function">ll <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span>&#123; ll res = <span class="number">1</span> % p; <span class="keyword">while</span> (b)&#123; <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p; a = a * (ll)a % p; b &gt;&gt;= <span class="number">1</span>;&#125; <span class="keyword">return</span> res;&#125;</span><br><span class="line"><span class="function">ll <span class="title">gcd</span><span class="params">(ll a,ll b)</span> </span>&#123; <span class="keyword">return</span> b?<span class="built_in">gcd</span>(b,a%b):a;&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">	<span class="type">int</span> l,r;</span><br><span class="line">	<span class="type">int</span> sum;</span><br><span class="line">&#125;tr[N*<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	tr[u].sum = tr[u&lt;&lt;<span class="number">1</span>].sum + tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].sum;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(l == r)</span><br><span class="line">	&#123;</span><br><span class="line">		tr[u] = &#123;l,l,<span class="number">0</span>&#125;;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		tr[u] = &#123;l,r&#125;;</span><br><span class="line">		<span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		<span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>,l,mid) , <span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">ll <span class="title">query</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r)	<span class="keyword">return</span> tr[u].sum;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt;<span class="number">1</span>;</span><br><span class="line">		ll sum = <span class="number">0</span>;</span><br><span class="line">		<span class="keyword">if</span>(l &lt;= mid)	sum += <span class="built_in">query</span>(u&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">		<span class="keyword">if</span>(r &gt; mid)	sum += <span class="built_in">query</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">		<span class="keyword">return</span> sum;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">	<span class="keyword">if</span>(tr[u].l == x &amp;&amp; tr[u].r == x)</span><br><span class="line">	&#123;</span><br><span class="line">		tr[u].sum ++;</span><br><span class="line">		<span class="keyword">return</span> ;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">else</span></span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">		<span class="keyword">if</span>(x &lt;= mid)	<span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>,x);</span><br><span class="line">		<span class="keyword">else</span> <span class="keyword">if</span>(x &gt; mid)	<span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,x);</span><br><span class="line">		<span class="built_in">pushup</span>(u);</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span>&#123;</span><br><span class="line">	<span class="type">int</span> t;</span><br><span class="line">	cin&gt;&gt;t;</span><br><span class="line">	<span class="keyword">while</span>(t--)</span><br><span class="line">	&#123;</span><br><span class="line">		<span class="type">int</span> n;</span><br><span class="line">		cin&gt;&gt;n;</span><br><span class="line">		<span class="built_in">memset</span>(tr,<span class="number">0</span>,<span class="keyword">sizeof</span> tr);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )	cin&gt;&gt;a[i];</span><br><span class="line">		ll ans = <span class="number">0</span>;</span><br><span class="line">		<span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">		<span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt; n ; i ++ )</span><br><span class="line">		&#123;</span><br><span class="line">			ans += <span class="built_in">query</span>(<span class="number">1</span>,a[i],n);</span><br><span class="line">			<span class="built_in">modify</span>(<span class="number">1</span>,a[i]);</span><br><span class="line">		&#125;</span><br><span class="line">		cout&lt;&lt;ans&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
      <categories>
        <category>codeforces</category>
      </categories>
  </entry>
  <entry>
    <title>快读</title>
    <url>/posts/7d9e.html</url>
    <content><![CDATA[<h1 id="快读"><a href="#快读" class="headerlink" title="快读"></a>快读</h1><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">   <span class="type">char</span> r=<span class="built_in">getchar</span>();<span class="type">bool</span> neg=<span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">while</span>(r&lt;<span class="string">&#x27;0&#x27;</span>||r&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(r==<span class="string">&#x27;-&#x27;</span>)neg=<span class="literal">true</span>;r=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">   <span class="keyword">while</span>(r&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;r&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;ans=ans*<span class="number">10</span>+r-<span class="string">&#x27;0&#x27;</span>;r=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">   <span class="keyword">return</span> (neg)?-ans:ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

]]></content>
  </entry>
  <entry>
    <title>莫队</title>
    <url>/posts/4fa5.html</url>
    <content><![CDATA[<h1 id="莫队"><a href="#莫队" class="headerlink" title="莫队"></a>莫队</h1><h2 id="区间中不同数字的个数"><a href="#区间中不同数字的个数" class="headerlink" title="区间中不同数字的个数"></a>区间中不同数字的个数</h2><h3 id="莫队-1"><a href="#莫队-1" class="headerlink" title="莫队"></a>莫队</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">   <span class="type">char</span> r=<span class="built_in">getchar</span>();<span class="type">bool</span> neg=<span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">while</span>(r&lt;<span class="string">&#x27;0&#x27;</span>||r&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(r==<span class="string">&#x27;-&#x27;</span>)neg=<span class="literal">true</span>;r=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">   <span class="keyword">while</span>(r&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;r&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;ans=ans*<span class="number">10</span>+r-<span class="string">&#x27;0&#x27;</span>;r=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">   <span class="keyword">return</span> (neg)?-ans:ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n,m,len;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i/len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,v;</span><br><span class="line">&#125;no[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="built_in">get</span>(a.l) , j = <span class="built_in">get</span>(b.l);</span><br><span class="line">    <span class="keyword">if</span>(i != j)  <span class="keyword">return</span> i &lt; j;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(i%<span class="number">2</span>) <span class="keyword">return</span> a.r &gt; b.r;</span><br><span class="line">        <span class="keyword">return</span> a.r &lt; b.r;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> s[N],ans[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span>&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!s[x])   res ++;</span><br><span class="line">    s[x] ++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span>&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    s[x] --;</span><br><span class="line">    <span class="keyword">if</span>(!s[x])   res --;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ ) a[i] = <span class="built_in">read</span>();</span><br><span class="line">    m = <span class="built_in">read</span>();</span><br><span class="line">    len = <span class="built_in">max</span>(<span class="number">1</span>, (<span class="type">int</span>)<span class="built_in">sqrt</span>((<span class="type">double</span>)n * n / m));</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x,y;</span><br><span class="line">        x = <span class="built_in">read</span>(),y=<span class="built_in">read</span>();</span><br><span class="line">        no[i] = &#123;x,y,i&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(no+<span class="number">1</span>,no+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span> , j = <span class="number">0</span>,res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span> ; k &lt;= m ; k ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l = no[k].l,r = no[k].r;</span><br><span class="line">        <span class="keyword">while</span>(i &lt; l)    <span class="built_in">del</span>(a[i++],res);</span><br><span class="line">        <span class="keyword">while</span>(i &gt; l)    <span class="built_in">add</span>(a[--i],res);</span><br><span class="line">        <span class="keyword">while</span>(j &lt; r)    <span class="built_in">add</span>(a[++j],res);</span><br><span class="line">        <span class="keyword">while</span>(j &gt; r)    <span class="built_in">del</span>(a[j--],res);</span><br><span class="line">        ans[no[k].v] = res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i ++ ) <span class="built_in">write</span>(ans[i]),cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h3 id="线段树"><a href="#线段树" class="headerlink" title="线段树"></a>线段树</h3><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,v;</span><br><span class="line">&#125;tr[N*<span class="number">4</span>];</span><br><span class="line"><span class="type">int</span> a[N],last[N];</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node a,node b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(a.l == b.l)  <span class="keyword">return</span> a.r &lt; b.r;</span><br><span class="line">    <span class="keyword">return</span> a.l &lt; b.l;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pushup</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    tr[u].v = tr[u&lt;&lt;<span class="number">1</span>].v + tr[u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>].v;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">build</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(l == r)</span><br><span class="line">    &#123;</span><br><span class="line">        tr[u] = &#123;l,r&#125;;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">    tr[u] = &#123;l,r&#125;;</span><br><span class="line">    <span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>,l,mid) , <span class="built_in">build</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,mid+<span class="number">1</span>,r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> x,<span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tr[u].l == x &amp;&amp; tr[u].r == x)</span><br><span class="line">    &#123;</span><br><span class="line">        tr[u].v += v;</span><br><span class="line">        <span class="keyword">return</span> ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(x &lt;= mid)    <span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>,x,v);</span><br><span class="line">        <span class="keyword">else</span> <span class="built_in">modify</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,x,v);</span><br><span class="line">        <span class="built_in">pushup</span>(u);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> u,<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(tr[u].l &gt;= l &amp;&amp; tr[u].r &lt;= r)    <span class="keyword">return</span> tr[u].v;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line">        <span class="type">int</span> mid = tr[u].l + tr[u].r &gt;&gt; <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(l &lt;= mid)    ans += <span class="built_in">query</span>(u&lt;&lt;<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">if</span>(r &gt; mid)     ans += <span class="built_in">query</span>(u&lt;&lt;<span class="number">1</span>|<span class="number">1</span>,l,r);</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line">vector&lt;PII&gt; ve[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n,m;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ ) cin&gt;&gt;a[i];</span><br><span class="line">    cin&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        ve[r].<span class="built_in">push_back</span>(&#123;l,i&#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">build</span>(<span class="number">1</span>,<span class="number">1</span>,n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">            <span class="keyword">if</span>(last[a[i]])  <span class="built_in">modify</span>(<span class="number">1</span>,last[a[i]],<span class="number">-1</span>);</span><br><span class="line">            <span class="built_in">modify</span>(<span class="number">1</span>,i,<span class="number">1</span>);</span><br><span class="line">            last[a[i]] = i;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">auto</span> &amp;[x,y]:ve[i])  ans[y] = <span class="built_in">query</span>(<span class="number">1</span>,x,i);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;  i &lt;= m ; i ++ ) cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="带修改"><a href="#带修改" class="headerlink" title="带修改"></a>带修改</h2><p>单点修改</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e4</span> + <span class="number">10</span>,M = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">C</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> v,x;   </span><br><span class="line">&#125;q[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Q</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,v,t;  </span><br><span class="line">&#125;no[N];</span><br><span class="line"><span class="type">int</span> a[N],ans[N],cnt[M];</span><br><span class="line"><span class="type">int</span> n,m,len;</span><br><span class="line"><span class="type">int</span> mq,mc;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> i)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> i/len;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(Q a,Q b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> al = <span class="built_in">get</span>(a.l) , ar = <span class="built_in">get</span>(a.r);</span><br><span class="line">    <span class="type">int</span> bl = <span class="built_in">get</span>(b.l) , br = <span class="built_in">get</span>(b.r);</span><br><span class="line">    <span class="keyword">if</span>(al != bl)    <span class="keyword">return</span> al &lt; bl;</span><br><span class="line">    <span class="keyword">if</span>(ar != br)    <span class="keyword">return</span> ar &lt; br;</span><br><span class="line">    <span class="keyword">return</span> a.t &lt; b.t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span>&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!cnt[x]) res ++ ;</span><br><span class="line">    cnt[x] ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">del</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span>&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cnt[x] -- ;</span><br><span class="line">    <span class="keyword">if</span> (!cnt[x]) res -- ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ ) cin&gt;&gt;a[i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        cin&gt;&gt;op&gt;&gt;l&gt;&gt;r;</span><br><span class="line">        <span class="keyword">if</span>(op[<span class="number">0</span>] == <span class="string">&#x27;Q&#x27;</span>)    mq ++,no[mq] = &#123;l,r,mq,mc&#125;;</span><br><span class="line">        <span class="keyword">else</span> q[++mc] = &#123;l,r&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    len = <span class="built_in">sqrt</span>(n) + <span class="number">1</span>;</span><br><span class="line">    <span class="built_in">sort</span>(no+<span class="number">1</span>,no+<span class="number">1</span>+mq,cmp);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">1</span> , j = <span class="number">0</span> , t = <span class="number">0</span>,res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">1</span> ; k &lt;= mq ; k ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l = no[k].l,r = no[k].r,tm = no[k].t;</span><br><span class="line">        <span class="comment">// cout&lt;&lt;l&lt;&lt;&quot; &quot;&lt;&lt;r&lt;&lt;&quot; &quot;&lt;&lt;tm&lt;&lt;&quot;\n&quot;;</span></span><br><span class="line">        <span class="keyword">while</span>(i &lt; l)    <span class="built_in">del</span>(a[i++],res);</span><br><span class="line">        <span class="keyword">while</span>(i &gt; l)    <span class="built_in">add</span>(a[--i],res);</span><br><span class="line">        <span class="keyword">while</span>(j &lt; r)    <span class="built_in">add</span>(a[++j],res);</span><br><span class="line">        <span class="keyword">while</span>(j &gt; r)    <span class="built_in">del</span>(a[j--],res);</span><br><span class="line">        <span class="comment">// cout&lt;&lt;res&lt;&lt;&quot; &quot;;</span></span><br><span class="line">        <span class="keyword">while</span>(t &lt; tm)</span><br><span class="line">        &#123;</span><br><span class="line">            t ++;</span><br><span class="line">            <span class="keyword">if</span>(q[t].v &gt;= l &amp;&amp; q[t].v &lt;= r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">del</span>(a[q[t].v],res);</span><br><span class="line">                <span class="built_in">add</span>(q[t].x,res);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">swap</span>(q[t].x,a[q[t].v]);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span>(t &gt; tm)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(q[t].v &gt;= l &amp;&amp; q[t].v &lt;= r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="built_in">del</span>(a[q[t].v],res);</span><br><span class="line">                <span class="built_in">add</span>(q[t].x,res);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="built_in">swap</span>(q[t].x,a[q[t].v]);</span><br><span class="line">            t --;</span><br><span class="line">        &#125;</span><br><span class="line">        ans[no[k].v] = res;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= mq ; i ++ )    cout&lt;&lt;ans[i]&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="树上莫队"><a href="#树上莫队" class="headerlink" title="树上莫队"></a>树上莫队</h2><p>树上路径中不同点数</p>
<figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m, len;</span><br><span class="line"><span class="type">int</span> w[N];</span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N], idx;</span><br><span class="line"><span class="type">int</span> depth[N], f[N][<span class="number">16</span>];</span><br><span class="line"><span class="type">int</span> seq[N], top, first[N], last[N];</span><br><span class="line"><span class="type">int</span> cnt[N], st[N], ans[N];</span><br><span class="line"><span class="type">int</span> que[N];</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Query</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> id, l, r, p;</span><br><span class="line">&#125;q[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add_edge</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = b, ne[idx] = h[a], h[a] = idx ++ ;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> father)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    seq[ ++ top] = u;</span><br><span class="line">    first[u] = top;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = h[u]; ~i; i = ne[i])</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = e[i];</span><br><span class="line">        <span class="keyword">if</span> (j != father) <span class="built_in">dfs</span>(j, u);</span><br><span class="line">    &#125;</span><br><span class="line">    seq[ ++ top] = u;</span><br><span class="line">    last[u] = top;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">memset</span>(depth, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> depth);</span><br><span class="line">    depth[<span class="number">0</span>] = <span class="number">0</span>, depth[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line">    que[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = que[hh ++ ];</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = h[t]; ~i; i = ne[i])</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = e[i];</span><br><span class="line">            <span class="keyword">if</span> (depth[j] &gt; depth[t] + <span class="number">1</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                depth[j] = depth[t] + <span class="number">1</span>;</span><br><span class="line">                f[j][<span class="number">0</span>] = t;</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= <span class="number">15</span>; k ++ )</span><br><span class="line">                    f[j][k] = f[f[j][k - <span class="number">1</span>]][k - <span class="number">1</span>];</span><br><span class="line">                que[ ++ tt] = j;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lca</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (depth[a] &lt; depth[b]) <span class="built_in">swap</span>(a, b);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">15</span>; k &gt;= <span class="number">0</span>; k -- )</span><br><span class="line">        <span class="keyword">if</span> (depth[f[a][k]] &gt;= depth[b])</span><br><span class="line">            a = f[a][k];</span><br><span class="line">    <span class="keyword">if</span> (a == b) <span class="keyword">return</span> a;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">15</span>; k &gt;= <span class="number">0</span>; k -- )</span><br><span class="line">        <span class="keyword">if</span> (f[a][k] != f[b][k])</span><br><span class="line">        &#123;</span><br><span class="line">            a = f[a][k];</span><br><span class="line">            b = f[b][k];</span><br><span class="line">        &#125;</span><br><span class="line">    <span class="keyword">return</span> f[a][<span class="number">0</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> x / len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> Query&amp; a, <span class="type">const</span> Query&amp; b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> i = <span class="built_in">get</span>(a.l), j = <span class="built_in">get</span>(b.l);</span><br><span class="line">    <span class="keyword">if</span> (i != j) <span class="keyword">return</span> i &lt; j;</span><br><span class="line">    <span class="keyword">return</span> a.r &lt; b.r;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span>&amp; res)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    st[x] ^= <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (st[x] == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        cnt[w[x]] -- ;</span><br><span class="line">        <span class="keyword">if</span> (!cnt[w[x]]) res -- ;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!cnt[w[x]]) res ++ ;</span><br><span class="line">        cnt[w[x]] ++ ;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ ) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;w[i]), nums.<span class="built_in">push_back</span>(w[i]);</span><br><span class="line">    <span class="built_in">sort</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>());</span><br><span class="line">    nums.<span class="built_in">erase</span>(<span class="built_in">unique</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>()), nums.<span class="built_in">end</span>());</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i ++ )</span><br><span class="line">        w[i] = <span class="built_in">lower_bound</span>(nums.<span class="built_in">begin</span>(), nums.<span class="built_in">end</span>(), w[i]) - nums.<span class="built_in">begin</span>();</span><br><span class="line"></span><br><span class="line">    <span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="built_in">add_edge</span>(a, b), <span class="built_in">add_edge</span>(b, a);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="built_in">dfs</span>(<span class="number">1</span>, <span class="number">-1</span>);</span><br><span class="line">    <span class="built_in">bfs</span>();</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, b;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">        <span class="keyword">if</span> (first[a] &gt; first[b]) <span class="built_in">swap</span>(a, b);</span><br><span class="line">        <span class="type">int</span> p = <span class="built_in">lca</span>(a, b);</span><br><span class="line">        <span class="keyword">if</span> (a == p) q[i] = &#123;i, first[a], first[b]&#125;;</span><br><span class="line">        <span class="keyword">else</span> q[i] = &#123;i, last[a], first[b], p&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    len = <span class="built_in">sqrt</span>(top);</span><br><span class="line">    <span class="built_in">sort</span>(q, q + m, cmp);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, L = <span class="number">1</span>, R = <span class="number">0</span>, res = <span class="number">0</span>; i &lt; m; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> id = q[i].id, l = q[i].l, r = q[i].r, p = q[i].p;</span><br><span class="line">        <span class="keyword">while</span> (R &lt; r) <span class="built_in">add</span>(seq[ ++ R], res);</span><br><span class="line">        <span class="keyword">while</span> (R &gt; r) <span class="built_in">add</span>(seq[R -- ], res);</span><br><span class="line">        <span class="keyword">while</span> (L &lt; l) <span class="built_in">add</span>(seq[L ++ ], res);</span><br><span class="line">        <span class="keyword">while</span> (L &gt; l) <span class="built_in">add</span>(seq[ -- L], res);</span><br><span class="line">        <span class="keyword">if</span> (p) <span class="built_in">add</span>(p, res);</span><br><span class="line">        ans[id] = res;</span><br><span class="line">        <span class="keyword">if</span> (p) <span class="built_in">add</span>(p, res);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i ++ ) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, ans[i]);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>

<h2 id="区间中相同数的个数"><a href="#区间中相同数的个数" class="headerlink" title="区间中相同数的个数"></a>区间中相同数的个数</h2><figure class="highlight c++"><table><tr><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="keyword">inline</span> <span class="type">int</span> <span class="title">read</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">   <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">   <span class="type">char</span> r=<span class="built_in">getchar</span>();<span class="type">bool</span> neg=<span class="literal">false</span>;</span><br><span class="line">   <span class="keyword">while</span>(r&lt;<span class="string">&#x27;0&#x27;</span>||r&gt;<span class="string">&#x27;9&#x27;</span>)&#123;<span class="keyword">if</span>(r==<span class="string">&#x27;-&#x27;</span>)neg=<span class="literal">true</span>;r=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">   <span class="keyword">while</span>(r&gt;=<span class="string">&#x27;0&#x27;</span>&amp;&amp;r&lt;=<span class="string">&#x27;9&#x27;</span>)&#123;ans=ans*<span class="number">10</span>+r-<span class="string">&#x27;0&#x27;</span>;r=<span class="built_in">getchar</span>();&#125;</span><br><span class="line">   <span class="keyword">return</span> (neg)?-ans:ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">write</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(x&lt;<span class="number">0</span>)&#123;<span class="built_in">putchar</span>(<span class="string">&#x27;-&#x27;</span>);x=-x;&#125;</span><br><span class="line">    <span class="keyword">if</span>(x&gt;<span class="number">9</span>)<span class="built_in">write</span>(x/<span class="number">10</span>);</span><br><span class="line">    <span class="built_in">putchar</span>(x%<span class="number">10</span>+<span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">2e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">node</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r,v;</span><br><span class="line">&#125;no[N];</span><br><span class="line"><span class="type">int</span> a[N],last1[N],last2[N],tr[N];</span><br><span class="line"><span class="type">int</span> ans[N];</span><br><span class="line"><span class="type">int</span> n,m,c;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(node A,node B)</span></span>&#123;</span><br><span class="line">   <span class="keyword">return</span> A.r&lt;B.r;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">modify</span><span class="params">(<span class="type">int</span> x,<span class="type">int</span> val)</span></span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=x;i&lt;=n;i+=(i&amp;-i))	tr[i]+=val;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span>&#123;</span><br><span class="line">    <span class="type">int</span> ans=<span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i=x;i;i-=(i&amp;-i))ans+=tr[i];</span><br><span class="line">    <span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    n = <span class="built_in">read</span>();</span><br><span class="line">    c = <span class="built_in">read</span>();</span><br><span class="line">    m = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= n ; i ++ ) a[i] = <span class="built_in">read</span>();</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l,r;</span><br><span class="line">        l = <span class="built_in">read</span>();</span><br><span class="line">        r = <span class="built_in">read</span>();</span><br><span class="line">        no[i] = &#123;l,r,i&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(no+<span class="number">1</span>,no+m+<span class="number">1</span>,cmp);</span><br><span class="line">    <span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m ; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">    	<span class="keyword">for</span>(;j&lt;=no[i].r;j++)</span><br><span class="line">    	&#123;</span><br><span class="line">	    	<span class="keyword">if</span>(!last1[a[j]])	last1[a[j]] = j;</span><br><span class="line">	    	<span class="keyword">else</span></span><br><span class="line">	    	&#123;</span><br><span class="line">	    		<span class="keyword">if</span>(!last2[a[j]])</span><br><span class="line">	    		&#123;</span><br><span class="line">	    			last2[a[j]] = j;</span><br><span class="line">	    			<span class="built_in">modify</span>(last1[a[j]],<span class="number">1</span>);</span><br><span class="line">	    		&#125;	</span><br><span class="line">	    		<span class="keyword">else</span></span><br><span class="line">	    		&#123;</span><br><span class="line">	    			<span class="built_in">modify</span>(last1[a[j]],<span class="number">-1</span>);</span><br><span class="line">	    			<span class="built_in">modify</span>(last2[a[j]],<span class="number">1</span>);</span><br><span class="line">	    			last1[a[j]]=last2[a[j]];</span><br><span class="line">	           	  	last2[a[j]]=j;</span><br><span class="line">	    		&#125;</span><br><span class="line">	    	&#125;</span><br><span class="line">    	&#125;</span><br><span class="line">        ans[no[i].v]=<span class="built_in">query</span>(no[i].r)-<span class="built_in">query</span>(no[i].l<span class="number">-1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= m ; i ++ ) <span class="built_in">write</span>(ans[i]),cout&lt;&lt;<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
]]></content>
  </entry>
</search>
